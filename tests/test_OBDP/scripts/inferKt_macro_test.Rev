############################################################################################
#
# RevBayes Validation Test: Occurrence birth-death process
#
# Model: Tree is drawn from a constant-rate fossilized birth-death process with occurrences.
#
#
# authors: Jérémy Andréoletti (from Walker Pett's FBDP test function 
#                                   + "Total-evidence dating under the FBD model" tutorial)
#
############################################################################################

seed(12345)

#######################
# Reading in the Data #
#######################

### Read in data
occurrence_ages <- readMatrix(file="data-macro-test/data_occurrences.csv", delimiter=";")[1]
trees = readTreeTrace("output_macro_test_Mt/mcmc_OBDP_macro_test.trees", burnin=0.25)
trace = readTrace("output_macro_test_Mt/mcmc_OBDP_macro_test.out", burnin=0.25)
# Trace[] vector with 13 values :
     # [1] Trace (Iteration)
     # [2] Trace (alpha_morpho)
     # [3] Trace (alpha_seq)
     # [4] Trace (branch_rates)
     # [5] Trace (clock_morpho)
     # [6] Trace (er)
     # [7] Trace (lambda)
     # [8] Trace (mu)
     # [9] Trace (obd_tree)
     # [10] Trace (omega)
     # [11] Trace (psi)
     # [12] Trace (sf)
     # [13] Trace (start_time)

nb_trees <- trees.getNumberSamples()
burnin <- trees.getBurnin()

# Fixed OBDP parameters
rho <- 1.0
rm <- 0.0
N <- 50
cond <- "time"
nb_time_points <- 200

# Define the times points at which density is computed according the the oldest start_time
max_age <- max(trace[13].getValues())
time_points <- seq(0,max_age*(1+0.5/(nb_time_points-1)), max_age/(nb_time_points-1))

write("Kt\n", filename="output_inferKT_macro_test/Kt_trace.txt", append=FALSE)
write

for (i in 1:(nb_trees-burnin)){
     
     # Tree
     obd_tree <- trees.getTree(burnin+i)

     # Variable OBDP parameters
     start_time <- trace[13].getValues()[i]
     lambda <- trace[7].getValues()[i]
     mu <- trace[8].getValues()[i]
     psi <- trace[11].getValues()[i]
     omega <- trace[10].getValues()[i]

     Kt = fnInferAncestralPopSize( originAge=start_time,
                                   lambda=lambda,
                                   mu=mu, 
                                   psi=psi, 
                                   omega=omega, 
                                   rho=rho, 
                                   removalPr=rm, 
                                   maxHiddenLin=N, 
                                   condition=cond, 
                                   occurrence_ages=occurrence_ages, 
                                   time_points=time_points, 
                                   timeTree=obd_tree)

     Kt

     write(";", Kt, "\n", filename="output_inferKT_macro_test/Kt_trace.txt", append=TRUE)
}


# you may want to quit RevBayes now
# q()
