############################################################################################
#
# RevBayes Validation Test: Occurrence birth-death process
#
# Model: Tree is drawn from a constant-rate fossilized birth-death process with occurrences.
#
#
# authors: Jérémy Andréoletti (from Walker Pett's FBDP test function 
#                                   + "Total-evidence dating under the FBD model" tutorial)
#
############################################################################################

seed(12345)

#######################
# Reading in the Data #
#######################

# Choose your burnin percentage
burninPercentage <- 0.2

### Read in data
occurrence_ages <- readMatrix(file="data-macro-test/data_occurrences.csv", delimiter=";")[1]
trees = readTreeTrace("output_macro_test_Mt_cluster/mcmc_OBDP_macro_test.trees", burnin=burninPercentage)
trace = readTrace("output_macro_test_Mt_cluster/mcmc_OBDP_macro_test.out", burnin=burninPercentage)
# Trace[] vector with 14 values :
     # [1] Trace (Iteration)
     # [2] Trace (alpha_morpho)
     # [3] Trace (alpha_seq)
     # [4] Trace (branch_rates)
     # [5] Trace (clock_morpho)
     # [6] Trace (er)
     # [7] Trace (lambda)
     # [8] Trace (mu)
     # [9] Trace (obd_tree)
     # [10] Trace (omega)
     # [11] Trace (psi)
     # [12] Trace (rho)
     # [13] Trace (sf)
     # [14] Trace (start_time)

file_path = "output_inferKt_macro_test_cluster/"

nb_trees <- trees.getNumberSamples()
burnin <- trees.getBurnin()

# Fixed OBDP parameters
rm <- 0.0
N <- 30
cond <- "time"
nb_time_points <- 200                                # Choose the number of time points you want to evaluate

# variable OBDP parameters -> check in trace that the values correspond well !
trace_start_time = trace[14]
trace_lambda = trace[7]
trace_mu = trace[8]
trace_psi = trace[11]
trace_omega = trace[10]
trace_rho = trace[12]

# Define the times points at which density is computed according the the oldest start_time
max_age <- max(trace_start_time.getValues())
time_points <- seq(0,max_age*(1+0.5/(nb_time_points-1)), max_age/(nb_time_points-1))

write("Start ages\n", trace_start_time.getValues(), "\n", filename=file_path + "start_time_trace.txt", append=FALSE)

write("Kt\n", filename=file_path + "Kt_trace.txt", append=FALSE)

for (i in 1:(nb_trees-burnin)){
     
     # Tree
     obd_tree <- trees.getTree(burnin+i)

     # Variable OBDP parameters
     start_time <- trace_start_time.getValues()[i]
     lambda <- trace_lambda.getValues()[i]
     mu <- trace_mu.getValues()[i]
     psi <- trace_psi.getValues()[i]
     omega <- trace_omega.getValues()[i]
     rho <- trace_rho.getValues()[i]

     Kt = fnInferAncestralPopSize( originAge=start_time,
                                   lambda=lambda,
                                   mu=mu, 
                                   psi=psi, 
                                   omega=omega, 
                                   rho=rho, 
                                   removalPr=rm, 
                                   maxHiddenLin=N, 
                                   condition=cond, 
                                   occurrence_ages=occurrence_ages, 
                                   time_points=time_points, 
                                   timeTree=obd_tree)

     i
     Kt

     write(";", Kt, "\n", filename=file_path + "Kt_trace.txt", append=TRUE)
}


# you may want to quit RevBayes now
# q()
