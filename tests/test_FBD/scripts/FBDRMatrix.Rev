seed(12345)

taxa <- readTaxonData("data/bears_taxa.tsv")

moves = VectorMoves()

t <- 0
for(i in 1:taxa.size())
{
	if(taxa[i].getMaxAge() > t)
	{
		t = taxa[i].getMaxAge()
	}
}

n <- 10

dt <- t/n

timeline <- seq(dt,t,dt)

rho <- 1.0

lambda ~ dnExponential(10)
mu ~ dnExponential(10)
psi ~ dnExponential(10)

moves.append( mvScale(lambda) )
moves.append( mvScale(mu) )
moves.append( mvScale(psi) )

### Define the tree-prior distribution as the fossilized birth-death process ###
bd ~ dnFBDRMatrix(lambda=lambda, mu=mu, psi=psi, rho=rho, taxa=taxa, timeline=timeline)

moves.append( mvMatrixElementScale(bd, weight=taxa.size()) )

moves.append( mvMatrixElementSlide(bd, weight=taxa.size()) )

mymodel = model(bd)

monitors = VectorMonitors()

# Create a vector of monitors #
monitors.append( mnModel(filename="output/fbdrmatrix.log", printgen=10) )
monitors.append( mnScreen(lambda, mu, psi, printgen=100) )

# Initialize the MCMC object #
mymcmc = mcmc(mymodel, monitors, moves, moveschedule="random")

# Run the MCMC #
mymcmc.run(generations=1000)

# Quit RevBayes #
q()
